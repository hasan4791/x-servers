---
- name: Create xserver root directory
  file:
    path: "{{ xserver_root }}/x-servers"
    state: directory
  register: task_status
  until: task_status is successful
  retries: "{{ task_retries | int }}"
  delay: "{{ task_delay | int }}"

- name: Create xserver data directory
  file:
    path: "{{ xserver_root }}/{{ item.name }}"
    state: directory
  with_items:
    - {name: 'x-servers-data'}
    - {name: 'x-servers-data/custom-sepolicy'}
  register: task_status
  until: task_status is successful
  retries: "{{ task_retries | int }}"
  delay: "{{ task_delay | int }}"

- name: Archive server files
  archive:
    path: "{{ xserver_project_root }}/baseimage-ubuntu"
    dest: /tmp/baseimage-ubuntu.tgz
    format: gz
  delegate_to: 127.0.0.1
  register: task_status
  until: task_status is successful
  retries: "{{ task_retries | int }}"
  delay: "{{ task_delay | int }}"

- name: Unarchive server files
  unarchive:
    src: /tmp/baseimage-ubuntu.tgz
    dest: "{{ xserver_root }}/x-servers/"
  register: task_status
  until: task_status is successful
  retries: "{{ task_retries | int }}"
  delay: "{{ task_delay | int }}"

- name: Copy build script
  copy:
    src: "{{ xserver_project_root }}/build.sh"
    dest: "{{ xserver_root }}/x-servers/"
    mode: preserve
  register: task_status
  until: task_status is successful
  retries: "{{ task_retries | int }}"
  delay: "{{ task_delay | int }}"

- name: copy image shortnames script
  copy:
    src: image-shortnames.sh
    dest: /tmp/image-shortnames.sh
    mode: preserve
  register: task_status
  until: task_status is successful
  retries: "{{ task_retries | int }}"
  delay: "{{ task_delay | int }}"

- name: Append image shortnames
  shell: /tmp/image-shortnames.sh
  become: true
  register: task_status
  until: task_status is successful
  retries: "{{ task_retries | int }}"
  delay: "{{ task_delay | int }}"

# Rootful Mode
- name: Check image exists
  podman_image_info:
    name: "{{ xserver_baseimage }}"
  become: true
  register: image_info
  ignore_errors: true
  when: xs_root_container|bool

- name: Build image if not exists
  command:
    cmd: ./build.sh "{{ xserver_target_arch }}" "baseimage-ubuntu"
    chdir: "{{ xserver_root }}/x-servers"
  become: true
  register: task_status
  until: task_status is successful
  retries: "{{ task_retries | int }}"
  delay: "{{ task_delay | int }}"
  when: 'xs_root_container|bool and (image_info.images|length == 0 or bs_force_update|bool)'

# Rootless Mode
- name: Check image exists
  podman_image_info:
    name: "{{ xserver_baseimage }}"
  register: image_info
  ignore_errors: true
  when: xs_rootless_container|bool

- name: Build image if not exists
  command:
    cmd: ./build.sh "{{ xserver_target_arch }}" "baseimage-ubuntu"
    chdir: "{{ xserver_root }}/x-servers"
  register: task_status
  until: task_status is successful
  retries: "{{ task_retries | int }}"
  delay: "{{ task_delay | int }}"
  when: 'xs_rootless_container|bool and (image_info.images|length == 0 or bs_force_update|bool)'
